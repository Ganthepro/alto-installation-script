version: '3.8'

services:
  mongodb:
    image: mongo:4.4
    container_name: infra_mongodb
    restart: unless-stopped
    ports:
      - 27017:27017
    volumes:
      - mongodb_data:/data/db
    networks:
      - azure-iot-edge
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 3G
        reservations:
          memory: 1G

  timescaledb:
    image: timescale/timescaledb-ha:pg17
    container_name: infra_timescaledb
    restart: unless-stopped
    ports:
      - 5433:5432
    volumes:
      - timescaledb_data:/home/postgres/pgdata/data
      - ./scripts/databases:/timescaledb
    env_file:
      - .env
    environment:
      - POSTGRES_DB=${TIMESCALEDB_DATABASE}
      - POSTGRES_PASSWORD=${TIMESCALEDB_PASSWORD}
    command: 
      - "bash"
      - "-c"
      - "/timescaledb/timescaledb-entrypoint.sh"
    networks:
      - azure-iot-edge
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  nginx-proxy:
    image: nginx:alpine
    container_name: nginx-proxy
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    restart: always
    networks:
      - azure-iot-edge

volumes:
  mongodb_data:
  timescaledb_data:

networks:
  azure-iot-edge:
    external: true
    driver: bridge

# networks:
#   alto_internal:
#     name: alto_internal
  # supabase_network:
  #   name: supabase_network
  #   external: true
